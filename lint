#!/usr/bin/env perl

use strict;
use warnings;
use diagnostics;
use autodie;
use File::Basename;
use Term::ANSIColor qw(:constants);
use Getopt::Long qw(:config gnu_compat no_ignore_case bundling);

my $PROGRAM = basename $0;
my $VERSION = '0.1';

my %OBSOLETE_PACKAGE = map { $_ => 1 } qw(
    autoconf-2.13
    fuse2
    gtk-engines
    hcxtools3
    ktsuss
    librsvg-compat
    libxcrypt2.4
    mdk3
    newsboat213
    pango-compat
    pm-utils
    py-cairo
    py-gobject-compat
    python
    shared-mime-info
    smtp-user-enum
    tnscmd10g
    xorg-libxfont
    xorg-xf86-input-keyboard
    );

my %INTERNAL_PACKAGE = map { $_, 1 } qw(
    filesystem
    );

my %REPO_PACKAGE = map { chomp; $_, 1 } qx(pkgman printf "%n\n");

my %FEED;

sub load_feeds {
    open my $fh, 'feeds.urls';
    while (<$fh>) {
        next unless
            /^(?:.*?)\s+"~\[.*?\]\s+(?<title>.*?)"(?:\s+(?:.*?)\s+)?$/;

        $FEED{ $_ }++ for (split /\/\s*/, $+{title});
    }
    close $fh;
}

sub print_missing {
    print <<EOF;

The following packages have no RSS/Atom feeds
=============================================

EOF
    for (sort keys %REPO_PACKAGE) {
        next if exists $FEED{ $_ };

        if    ($OBSOLETE_PACKAGE{ $_ }) {
            print "[x] \e[9m$_\e[0m \e[3m(obsolete)\e[0m\n";
        }
        elsif ($INTERNAL_PACKAGE{ $_ }) {
            print "[v] \e[9m$_\e[0m \e[3m(internal)\e[0m\n";
        }
        else {
            print "[ ] $_\n";
        }
    }
}

sub print_redundant {
    print <<EOF;

The following RSS/Atom feeds are redundant
==========================================

EOF
    for (sort keys %FEED) {
        print "$_\n" unless exists $REPO_PACKAGE{ $_ };
    }
}

sub print_help {
    print <<EOF;
Usage: $PROGRAM [OPTION]...
Lint RSS/Atom feeds for the software used in Zeppe-Lin for errors.

  -m, --missing    check for packages that have no RSS/Atom feeds
  -r, --redundant  check for redundant feeds
  -v, --version    print version and exit
  -h, --help       print help and exit
EOF
}

sub print_version {
    print "$PROGRAM $VERSION\n";
}

sub main {
    GetOptions(
        "m|missing"     =>  \my $opt_missing,
        "r|redundant"   =>  \my $opt_redundant,
        "v|version"     =>  \my $opt_version,
        "h|help|?"      =>  \my $opt_help,
    ) or die "$PROGRAM: error in command-line arguments.\n";

    print_version() and exit if $opt_version;
    print_help()    and exit if $opt_help;

    load_feeds();

    print_missing()          if $opt_missing;
    print_redundant()        if $opt_redundant;
}

main() if not caller();
1;

# vim:sw=4:ts=4:sts=4:et:cc=72:tw=70
# End of file.
